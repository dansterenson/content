commonfields:
  id: SplunkPy_copy
  version: -1
vcShouldKeepItemLegacyProdMachine: false
name: SplunkPy_copy
display: SplunkPy_copy
category: Analytics & SIEM
description: Runs queries on Splunk servers.
configuration:
- section: Connect
  display: Host - IP (x.x.x.x)
  name: host
  type: 0
  required: true
- section: Connect
  display: Username
  name: authentication
  type: 9
  required: true
- section: Connect
  display: Port
  name: port
  defaultvalue: "8089"
  type: 0
  required: true
- display: Fetch events query
  name: fetchQuery
  defaultvalue: search `notable` | eval rule_name=if(isnull(rule_name),source,rule_name) | eval rule_title=if(isnull(rule_title),rule_name,rule_title) | `get_urgency` | `risk_correlation` | eval rule_description=if(isnull(rule_description),source,rule_description) | eval security_domain=if(isnull(security_domain),source,security_domain) | expandtoken
  type: 0
  required: false
  additionalinfo: The Splunk search query by which to fetch events. The default query fetches ES notable events. You can edit this query to fetch other types of events. Note, that to fetch ES notable events, make sure to include the \`notable\` macro in your query.
- section: Collect
  display: Fetch Limit (Max.- 200, Recommended less than 50)
  name: fetch_limit
  defaultvalue: "50"
  type: 0
  required: false
- section: Collect
  display: Fetch incidents
  name: isFetch
  type: 8
  required: false
- section: Connect
  display: Incident type
  name: incidentType
  type: 13
  required: false
- section: Collect
  advanced: true
  display: Use Splunk Clock Time For Fetch
  name: useSplunkTime
  defaultvalue: "true"
  type: 8
  required: false
- section: Collect
  advanced: true
  display: Parse Raw Part of Notable Events
  name: parseNotableEventsRaw
  defaultvalue: "false"
  type: 8
  required: false
- section: Collect
  advanced: true
  display: Replace with Underscore in Incident Fields
  name: replaceKeys
  defaultvalue: "false"
  type: 8
  required: false
- section: Collect
  advanced: true
  display: Timezone of the Splunk server, in minutes. For example, if GMT is gmt +3, set timezone to +180. For UTC, set the timezone to 0. (Set only if the Splunk server is different than the Cortex XSOAR server.) Relevant only for fetching and mirroring notable events.
  name: timezone
  type: 0
  required: false
- section: Collect
  display: First fetch timestamp (<number> <time unit>, e.g., 12 hours, 7 days, 3 months, 1 year)
  name: fetch_time
  defaultvalue: 10 minutes
  type: 0
  required: false
  additionalinfo: The amount of time to go back when performing the first fetch, or when creating a mapping using the Select Schema option.
- section: Collect
  advanced: true
  display: Extract Fields - CSV fields that will be parsed out of _raw notable events
  name: extractFields
  type: 12
  required: false
- section: Collect
  advanced: true
  display: Event Type Field
  name: type_field
  defaultvalue: source
  type: 0
  required: false
  additionalinfo: Used only for mapping with the Select Schema option. The name of the field that contains the type of the event or alert. The default value is "source", which is a good option for notable events. However, you may choose any custom field.
- section: Collect
  advanced: true
  display: Use CIM Schemas for Mapping
  name: use_cim
  defaultvalue: "false"
  type: 8
  required: false
  additionalinfo: If selected, when creating a mapper using the `Select Schema` feature (supported from Cortex XSOAR V6.0), the Splunk CIM field will be pulled. See https://docs.splunk.com/Documentation/CIM/4.18.0/User/Overview for more information.
- section: Collect
  display: Incident Mirroring Direction
  name: mirror_direction
  defaultvalue: None
  type: 15
  required: false
  options:
  - None
  - Incoming
  - Outgoing
  - Incoming And Outgoing
  additionalinfo: 'Choose the direction to mirror the incident: Incoming (from Splunk to Cortex XSOAR), Outgoing (from Cortex XSOAR to Splunk), or Incoming and Outgoing (from/to Cortex XSOAR and Splunk).'
- section: Collect
  advanced: true
  display: Close Mirrored Cortex XSOAR Incidents (Incoming Mirroring)
  name: close_incident
  defaultvalue: "false"
  type: 8
  required: false
  additionalinfo: When selected, closing the Splunk notable event with a "Closed" status will close the Cortex XSOAR incident.
- section: Collect
  display: Additional Splunk status labels to close on mirror (Incoming Mirroring)
  name: close_extra_labels
  type: 0
  required: false
  additionalinfo: 'A comma-separated list of Splunk status labels to mirror as closed Cortex XSOAR incident (Example: Resolved,False-Positive).'
- section: Collect
  advanced: true
  display: Enable Splunk statuses marked as "End Status" to close on mirror (Incoming Mirroring)
  name: close_end_status_statuses
  defaultvalue: "false"
  type: 8
  required: false
  additionalinfo: When selected, Splunk Notable Events with a status that is marked as "End Status" will close the Cortex XSOAR incident.
- section: Collect
  advanced: true
  display: Close Mirrored Splunk Notable Events (Outgoing Mirroring)
  name: close_notable
  defaultvalue: "false"
  type: 8
  required: false
  additionalinfo: When selected, closing the Cortex XSOAR incident  will close the Notable Event in Splunk.
- section: Connect
  advanced: true
  display: Trust any certificate (not secure)
  name: unsecure
  type: 8
  required: false
- section: Connect
  advanced: true
  display: Use system proxy settings
  name: proxy
  type: 8
  required: false
- section: Collect
  advanced: true
  display: The app context of the namespace
  name: app
  type: 0
  required: false
- section: Collect
  advanced: true
  display: ""
  displaypassword: HEC Token (HTTP Event Collector)
  name: cred_hec_token
  type: 9
  required: false
  hiddenusername: true
- section: Collect
  advanced: true
  display: HEC Token (HTTP Event Collector)
  name: hec_token
  type: 4
  required: false
  hidden: true
- section: Collect
  advanced: true
  display: 'HEC BASE URL (e.g: https://localhost:8088 or https://example.splunkcloud.com/).'
  name: hec_url
  type: 0
  required: false
- section: Collect
  advanced: true
  display: Enrichment Types
  name: enabled_enrichments
  type: 16
  required: false
  options:
  - Drilldown
  - Asset
  - Identity
  additionalinfo: Enrichment types to enrich each fetched notable. If none are selected, the integration will fetch notables as usual (without enrichment). For more info about enrichment types see the integration additional info.
- section: Collect
  advanced: true
  display: Enrichment Timeout (Minutes)
  name: enrichment_timeout
  defaultvalue: "5"
  type: 0
  required: false
  additionalinfo: When the selected timeout was reached, notable events that were not enriched will be saved without the enrichment.
- section: Collect
  advanced: true
  display: Number of Events Per Enrichment Type
  name: num_enrichment_events
  defaultvalue: "20"
  type: 0
  required: false
  additionalinfo: The limit of how many events to retrieve per each one of the enrichment types (Drilldown, Asset, and Identity). To retrieve all events, enter "0" (not recommended).
- section: Collect
  advanced: true
  display: 'Advanced: Extensive logging (for debugging purposes). Do not use this option unless advised otherwise.'
  name: extensive_logs
  type: 8
  required: false
- section: Collect
  advanced: true
  display: 'Advanced: Fetch backwards window for the events occurrence time (minutes)'
  name: occurrence_look_behind
  defaultvalue: "15"
  type: 0
  required: false
  additionalinfo: The fetch time range will be at least the size specified here. This will support events that have a gap between their occurrence time and their index time in Splunk. To decide how long the backwards window should be, you need to determine the average time between them both in your Splunk environment.
- section: Collect
  advanced: true
  display: 'Advanced: Unique ID fields'
  name: unique_id_fields
  type: 0
  required: false
  additionalinfo: A comma-separated list of fields, which together are a unique identifier for the events to fetch in order to avoid fetching duplicates incidents.
- section: Collect
  advanced: true
  display: Enable user mapping
  name: userMapping
  defaultvalue: "false"
  type: 8
  required: false
- section: Connect
  advanced: true
  display: Users Lookup table name
  name: user_map_lookup_name
  defaultvalue: splunk_xsoar_users
  type: 0
  required: false
  additionalinfo: The name of the lookup table in Splunk, containing the username's mapping data.
- section: Connect
  advanced: true
  display: XSOAR user key
  name: xsoar_user_field
  defaultvalue: xsoar_username
  type: 0
  required: false
  additionalinfo: The name of the lookup column containing the Cortex XSOAR username.
- section: Connect
  advanced: true
  display: SPLUNK user key
  name: splunk_user_field
  defaultvalue: splunk_username
  type: 0
  required: false
  additionalinfo: The name of the lookup table containing the Splunk username.
- section: Collect
  advanced: true
  display: Incidents Fetch Interval
  name: incidentFetchInterval
  defaultvalue: "1"
  type: 19
  required: false
script:
  script: ''
  type: python
  commands:
  - name: splunk-results
    arguments:
    - name: sid
      required: true
      default: true
      description: ID of the search for which to return results.
    - name: limit
      description: The maximum number of returned results per search. To retrieve all results, enter "0" (not recommended).
      defaultValue: "100"
    description: Returns the results of a previous Splunk search. You can use this command in conjunction with the splunk-job-create command.
  - name: splunk-search
    arguments:
    - name: query
      required: true
      default: true
      description: 'The Splunk search language string to execute. For example: "index=* | head 3". '
    - name: earliest_time
      description: 'Specifies the earliest time in the time range to search. The time string can be a UTC time (with fractional seconds), a relative time specifier (to now), or a formatted time string. Default is 1 week ago, in the format "-7d". You can also specify time in the format: 2014-06-19T12:00:00.000-07:00.'
    - name: latest_time
      description: 'Specifies the latest time in the time range to search. The time string can be a UTC time (with fractional seconds), a relative time specifier (to now), or a formatted time string. For example: "2014-06-19T12:00:00.000-07:00" or "-3d" (for 3 days ago).'
    - name: event_limit
      description: Maximum number of events to return. Default is 100. If "0", all results are returned.
    - name: batch_limit
      description: The maximum number of returned results to process at a time. For example, if 100 results are returned, and you specify a batch_limit of 10, the results will be processed 10 at a time over 10 iterations. This does not effect the search or the context and outputs returned. In some cases, specifying a batch_size enhances search performance. If you think that the search execution is suboptimal, we recommend trying several batch_size values to determine which works best for your search. Default is 25,000.
      defaultValue: "25000"
    - name: update_context
      auto: PREDEFINED
      predefined:
      - "true"
      - "false"
      description: 'Determines whether the results will be entered into the context. Possible values: "true" and "false".'
      defaultValue: "true"
    - name: app
      description: A string that contains the application namespace in which to restrict searches.
    - name: polling
      auto: PREDEFINED
      predefined:
      - "true"
      - "false"
      description: Use XSOAR built-in polling to retrieve the result when it's ready.
    - name: interval_in_seconds
      description: Interval in seconds between each poll.
      defaultValue: "30"
    - name: sid
      description: The job sid.
    - name: fast_mode
      auto: PREDEFINED
      predefined:
      - "true"
      - "false"
      description: The Fast mode prioritizes the performance of the search and does not return nonessential field or event data. This means that the search returns what is essential and required if fast_mode equals 'true'.
      defaultValue: "false"
    outputs:
    - contextPath: Splunk.Result
      description: The results of the Splunk search. The results are a JSON array, in which each item is a Splunk event.
      type: Unknown
    - contextPath: Splunk.JobStatus.SID
      description: ID of the job.
      type: String
    - contextPath: Splunk.JobStatus.Status
      description: Status of the job.
      type: String
    - contextPath: Splunk.JobStatus.TotalResults
      description: The number of events that were returned by the job.
      type: String
    description: Searches Splunk for events. For human readable output, the table command is supported in the query argument. For example, `query=" * | table field1 field2 field3"` will generate a table with field1, field2, and field3 as headers.
    polling: true
  - name: splunk-submit-event
    arguments:
    - name: index
      required: true
      description: Splunk index in which to push data. Run the splunk-get-indexes command to get all indexes.
    - name: data
      required: true
      default: true
      description: The new event data to push. Can be any string.
    - name: sourcetype
      required: true
      description: Event source type.
    - name: host
      required: true
      description: Event host. Can be "Local" or "120.0.0.1".
    description: Creates a new event in Splunk.
  - name: splunk-get-indexes
    arguments: []
    description: Prints all Splunk index names.
  - name: splunk-notable-event-edit
    arguments:
    - name: eventIDs
      required: true
      description: A comma-separated list of event IDs of notable events.
    - name: owner
      description: A Splunk user to assign to the notable events.
    - name: comment
      description: Comment to add to the notable events.
    - name: urgency
      auto: PREDEFINED
      predefined:
      - critical
      - high
      - medium
      - low
      - informational
      description: 'Notable event urgency. Possible values: "critical", "high", "medium", "low", and "informational".'
    - name: status
      description: Notable event status. 0 - Unassigned, 1 - Assigned, 2 - In Progress, 3 - Pending, 4 - Resolved, 5 - Closed.
    - name: disposition
      auto: PREDEFINED
      predefined:
      - True Positive - Suspicious Activity
      - Benign Positive - Suspicious But Expected
      - False Positive - Incorrect Analytic Logic
      - False Positive - Inaccurate Data
      - Other
      - Undetermined
      description: Disposition of the notable. If the more options exist on the server, specifying the disposition as `disposition:#` will work in place of choosing one of the default values from the list.
    description: Updates existing notable events in Splunk ES.
    execution: true
  - name: splunk-job-create
    arguments:
    - name: query
      required: true
      description: The Splunk search language string to execute. For example :"index=* | head 3".
    - name: app
      description: A string that contains the application namespace in which to restrict searches.
    outputs:
    - contextPath: Splunk.Job
      description: The SID of the created job.
      type: Unknown
    description: Creates a new search job in Splunk.
  - name: splunk-parse-raw
    arguments:
    - name: raw
      default: true
      description: The raw data of the Splunk event (string).
      defaultValue: ${Splunk.Result._raw}
    outputs:
    - contextPath: Splunk.Raw.Parsed
      description: The raw event data (parsed).
      type: unknown
    description: Parses the raw part of the event.
  - name: splunk-submit-event-hec
    arguments:
    - name: event
      required: true
      description: |-
        Event payload key-value pair.
        String example: "event": "Access log test message."
    - name: fields
      description: Fields for indexing that do not occur in the event payload itself. Accepts multiple, comma-separated, fields.
    - name: index
      description: The index name.
    - name: host
      description: The hostname.
    - name: source_type
      description: User-defined event source type.
    - name: source
      description: User-defined event source.
    - name: time
      description: Epoch-formatted time.
    description: Sends events to an HTTP Event Collector using the Splunk platform JSON event protocol.
  - name: splunk-job-status
    arguments:
    - name: sid
      required: true
      description: ID of the job for which to get the status.
    outputs:
    - contextPath: Splunk.JobStatus.SID
      description: ID of the job.
      type: String
    - contextPath: Splunk.JobStatus.Status
      description: Status of the job.
      type: String
    description: Returns the status of a job.
  - name: splunk-kv-store-collection-create
    arguments:
    - name: kv_store_name
      required: true
      description: The name of the KV store collection.
    - name: app_name
      required: true
      default: true
      description: The name of the Splunk application in which to create the KV store. The default is "search".
      defaultValue: search
    description: Creates a new KV store table.
  - name: splunk-kv-store-collection-config
    arguments:
    - name: kv_store_collection_name
      required: true
      description: The name of the KV store collection.
    - name: kv_store_fields
      required: true
      description: |
        The list of names and value types used to define the KV store collection scheme, e.g., id=number, name=string, address=string.
      isArray: true
    - name: app_name
      required: true
      default: true
      description: The name of the Splunk application that contains the KV store collection. The default is "search".
      defaultValue: search
    description: Configures the KV store fields.
  - name: splunk-kv-store-collection-add-entries
    arguments:
    - name: kv_store_data
      required: true
      description: 'The data to add to the KV store collection, according to the collection JSON format, e.g., [{"name": "Splunk HQ", "id": 456, "address": { "street": "340 Brannan Street", "city": "San Francisco", "state": "CA", "zip": "121212"}}, {"name": "Splunk HQ", "id": 123, "address": { "street": "250 Brannan Street", "city": "San Francisco", "state": "CA", "zip": "94107"}}]'
    - name: kv_store_collection_name
      required: true
      description: The name of the KV store collection.
    - name: indicator_path
      description: The path to the indicator value in kv_store_data.
    - name: app_name
      required: true
      default: true
      description: The name of the Splunk application that contains the KV store collection. The default is "search".
      defaultValue: search
    description: Adds objects to a KV store utilizing the batch-save API.
  - name: splunk-kv-store-collections-list
    arguments:
    - name: app_name
      required: true
      default: true
      description: The name of the Splunk application in which to create the KV store. The default is "search".
      defaultValue: search
    outputs:
    - contextPath: Splunk.CollectionList
      description: List of collections.
      type: String
    description: Lists all collections for the specified application.
  - name: splunk-kv-store-collection-data-list
    arguments:
    - name: app_name
      required: true
      default: true
      description: The name of the Splunk application that contains the KV store collection. The default is "search".
      defaultValue: search
    - name: kv_store_collection_name
      required: true
      description: A comma-separated list of KV store collections.
      isArray: true
    - name: limit
      description: Maximum number of records to return. The default is 50.
      defaultValue: "50"
    outputs:
    - contextPath: Splunk.KVstoreData
      description: An array of collection names. Each collection name will have an array of values, e.g., Splunk.KVstoreData.<collection_name> is a list of the data in the collection).
      type: Unknown
    description: Lists all data within a specific KV store collection or collections.
  - name: splunk-kv-store-collection-data-delete
    arguments:
    - name: app_name
      required: true
      default: true
      description: The name of the Splunk application that contains the KV store collection. For example, "search".
      defaultValue: search
    - name: kv_store_collection_name
      required: true
      description: A comma-separated list of KV store collections.
      isArray: true
    description: Deletes all data within the specified KV store collection or collections.
  - name: splunk-kv-store-collection-delete
    arguments:
    - name: app_name
      required: true
      default: true
      description: The name of the Splunk application that contains the KV store. The default is "store".
      defaultValue: search
    - name: kv_store_name
      required: true
      description: A comma-separated list of KV stores.
      isArray: true
    description: Deletes the specified KV stores.
  - name: splunk-kv-store-collection-search-entry
    arguments:
    - name: app_name
      required: true
      default: true
      description: The name of the Splunk application that contains the KV store collection. The default is "search".
      defaultValue: search
    - name: kv_store_collection_name
      required: true
      description: The name of the KV store collection.
    - name: key
      description: The key name to search in the store. If the query argument is used, this argument will be ignored.
    - name: value
      description: The value to search in the store. If the query argument is used, this argument will be ignored.
    - name: query
      description: 'Complex query to search in the store with operators such as "and", "or", "not", etc. For more information, see the Splunk documentation: https://docs.splunk.com/Documentation/Splunk/8.0.3/RESTREF/RESTkvstore.'
    outputs:
    - contextPath: Splunk.KVstoreData
      description: An array of collection names. Each collection name will have an array of values, e.g., Splunk.KVstoreData.<collection_name> is a list of the data in the collection).
      type: Unknown
    description: Searches for specific objects in a store. The search can be a basic key-value pair or a full query.
  - name: splunk-kv-store-collection-delete-entry
    arguments:
    - name: app_name
      required: true
      default: true
      description: The name of the Splunk application that contains the KV store collection. The default is "search".
      defaultValue: search
    - name: kv_store_collection_name
      required: true
      description: The name of the KV store collection.
    - name: indicator_path
      description: The path to the indicator value in kv_store_data.
    - name: key
      description: The key name to search in the store. If the query argument is used, this argument will be ignored.
    - name: value
      description: The value to search in the store. If the query argument is used, this argument will be ignored.
    - name: query
      description: |-
        Complex query to search in the store with operators such as "and", "or", "not", etc.
        For more information, see the Splunk documentation: https://docs.splunk.com/Documentation/Splunk/8.0.3/RESTREF/RESTkvstore.
    description: Deletes the specified object in store. The search can be a basic key-value pair or a full query.
  - name: get-mapping-fields
    arguments: []
    description: Query Splunk to retrieve a list of sample alerts by alert type. Used for mapping fetched incidents through the Get Schema option.
  - name: get-remote-data
    arguments:
    - name: id
      required: true
      description: The remote event ID.
    - name: lastUpdate
      description: ISO format date with timezone, e.g., 2021-02-09T16:41:30.589575+02:00. The incident is only updated if it was modified after the last update time.
      defaultValue: "0"
    description: Gets data from a notable event. This method does not update the current incident, and should be used for debugging purposes.
  - name: get-modified-remote-data
    arguments:
    - name: lastUpdate
      description: ISO format date with timezone, e.g., 2021-02-09T16:41:30.589575+02:00. The incident is only returned if it was modified after the last update time.
    description: Gets the list of notable events that were modified since the last update. This command should be used for debugging purposes, and is available from Cortex XSOAR version 6.1.
  - name: splunk-reset-enriching-fetch-mechanism
    arguments: []
    description: Resets the enrichment mechanism of fetched notables.
  - name: splunk-get-username-by-xsoar-user
    arguments:
    - name: xsoar_username
      required: true
      default: true
      description: Cortex XSOAR username to match in Splunk's usernames records.
      isArray: true
    outputs:
    - contextPath: Splunk.UserMapping.XsoarUser
      description: Cortex XSOAR user mapping.
      type: String
    - contextPath: Splunk.UserMapping.SplunkUser
      description: Splunk user mapping.
      type: String
    description: Returns the Splunk's username matching the given Cortex XSOAR's username.
  dockerimage: demisto/splunksdk-py3:1.0.0.56501
  isfetch: true
  runonce: false
  subtype: python3
  ismappable: true
  isremotesyncin: true
  isremotesyncout: true
sourcemoduleid: SplunkPy
